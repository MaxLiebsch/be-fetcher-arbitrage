name: Deploy to crawler
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  # build:
  #   name: Create image for crawler
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Execute image builder script
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{secrets.BUILDER_HOST}}
  #         username: ${{ secrets.USERNAME }}
  #         command_timeout: 60m
  #         key: ${{ secrets.DEPLOY_CRAWLER_PK }}
  #         passphrase: ${{ secrets.DEPLOY_CRAWLER_PASSPHRASE }}
  #         script: |
  #           echo ${{secrets.DOCKER_TOKEN}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
  #           docker image prune -a -f
  #           docker builder prune -f
  #           git --work-tree=/root/be-fetcher-arbitrage --git-dir=/root/be-fetcher-arbitrage/.git pull
  #           docker build --progress=plain --secret id=ssh_key,src=/root/.ssh/id_clr_pkg --no-cache -t be-fetcher-arbitrage /root/be-fetcher-arbitrage/.
  #           docker tag be-fetcher-arbitrage:latest maxliebsch/be-fetcher-arbitrage:latest
  #           docker push maxliebsch/be-fetcher-arbitrage:latest
  #           docker logout
  deploy:
    name: Deploy image to crawler
    runs-on: ubuntu-latest
    # needs: build
    strategy:
      matrix:
        server: ${{ fromJSON(vars.HOSTS) }} # List all 30 servers here
    steps:
      - name: Print server
        run: echo ${{ matrix.server }}
      - name: Add all server fingerprints to known_hosts
        run: |
          mkdir -p ~/.ssh
          # Convert the comma-separated list into space-separated
          SERVERS=$(echo "${{ matrix.server }}" | tr ',' ' ')
          # Add fingerprints for all hosts dynamically
          for host in $SERVERS; do
            ssh-keyscan -H $host >> ~/.ssh/known_hosts
          done
        shell: bash
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{matrix.server}}
          command_timeout: 60m
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DEPLOY_CRAWLER_PK }}
          passphrase: ${{ secrets.DEPLOY_CRAWLER_PASSPHRASE }}
          script: |
            echo ${{secrets.DOCKER_READ_TOKEN}} | docker login registry.hub.docker.com/maxliebsch/be-fetcher-arbitrage:latest -u ${{secrets.DOCKER_USERNAME}} --password-stdin
            cat > /root/update_crawler.sh <<'EOF'
            ${{vars.UPDATE_CRAWLER_SCRIPT}}
            EOF
            export TERM=xterm
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y dialog apt-utils perl
            command -v dos2unix >/dev/null 2>&1 || { echo "Installing dos2unix..."; apt-get update && apt-get install -y dos2unix; }
            dos2unix /root/update_crawler.sh
            chmod +x /root/update_crawler.sh
            /root/update_crawler.sh
            docker logout
            rm /root/update_crawler.sh
