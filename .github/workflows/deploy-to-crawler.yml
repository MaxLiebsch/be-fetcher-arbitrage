name: Deploy to crawler
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
    # build: 
    #     name: Create image for crawler
    #     runs-on: ubuntu-latest
    #     steps:
    #     - name: Execute image builder script
    #       uses: appleboy/ssh-action@v1.0.3
    #       with:
    #         host: ${{secrets.BUILDER_HOST}}
    #         username: ${{ secrets.USERNAME }}
    #         key: ${{ secrets.DEPLOY_CRAWLER_PK }}
    #         passphrase: ${{ secrets.DEPLOY_CRAWLER_PASSPHRASE }}
    #         script: |
    #           echo ${{secrets.DOCKER_TOKEN}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
    #           docker image prune -a -f
    #           docker build --progress=plain --secret id=ssh_key,src=/root/.ssh/id_clr_pkg --no-cache -t be-fetcher-arbitrage /root/be-fetcher-arbitrage/.
    #           docker tag be-fetcher-arbitrage:latest maxliebsch/be-fetcher-arbitrage:latest
    #           docker push maxliebsch/be-fetcher-arbitrage:latest
    #           docker logout
    deploy:
        name: Deploy image to crawler
        runs-on: ubuntu-latest
        # needs: build
        steps:
        - name: executing remote ssh commands using password
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{vars.HOSTS}}
            sync: true
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.DEPLOY_CRAWLER_PK }}
            passphrase: ${{ secrets.DEPLOY_CRAWLER_PASSPHRASE }}
            script: |
              echo ${{secrets.DOCKER_READ_TOKEN}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
              cat > /root/update_crawler.sh <<EOF
              ${{vars.UPDATE_CRAWLER_SCRIPT}}
              EOF
              chmod +x /root/update_crawler.sh
              ./update_crawler.sh
              docker logout
#            rm /root/update_crawler.sh

